{"version":3,"file":"static/js/388.38cdd9a9.chunk.js","mappings":"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","sources":["app/components/Footer.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/ShoppingCart.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/Brand.jsx","app/components/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx","app/utils/utils.js"],"sourcesContent":["import { AppBar, Button, ThemeProvider, Toolbar } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport { Paragraph, Span } from './Typography';\r\n\r\nconst AppFooter = styled(Toolbar)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  minHeight: topBarHeight,\r\n  '@media (max-width: 499px)': {\r\n    display: 'table',\r\n    width: '100%',\r\n    minHeight: 'auto',\r\n    padding: '1rem 0',\r\n    '& .container': {\r\n      flexDirection: 'column !important',\r\n      '& a': { margin: '0 0 16px !important' },\r\n    },\r\n  },\r\n}));\r\n\r\nconst FooterContent = styled('div')(() => ({\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: '0px 1rem',\r\n  maxWidth: '1170px',\r\n  margin: '0 auto',\r\n}));\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n  const { settings } = useSettings();\r\n\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n\r\n  return (\r\n    <ThemeProvider theme={footerTheme}>\r\n      <AppBar color=\"primary\" position=\"static\" sx={{ zIndex: 96 }}>\r\n        <AppFooter>\r\n          <FooterContent>\r\n            <a href=\"https://example.com/downloads/matx-pro-react-admin/\">\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Get MatX Pro\r\n              </Button>\r\n            </a>\r\n            <Span sx={{ m: 'auto' }}></Span>\r\n            <Paragraph sx={{ m: 0 }}>\r\n              Design and Developed by <a href=\"http://example.com\">UI Lib</a>\r\n            </Paragraph>\r\n          </FooterContent>\r\n        </AppFooter>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { ThemeProvider, useTheme } from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n  const theme = useTheme();\r\n  const { settings } = useSettings();\r\n  const sidenavTheme = settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n\r\n  return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import { ThemeProvider } from '@mui/material';\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\nexport default SecondarySidenavTheme;\r\n","import { Badge, styled } from '@mui/material';\r\n\r\nconst BadgeSelected = styled(Badge)(() => ({\r\n  top: '0',\r\n  right: '0',\r\n  height: '32px',\r\n  width: '32px',\r\n  borderRadius: '50%',\r\n}));\r\n\r\nexport default BadgeSelected;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Drawer,\r\n  Icon,\r\n  IconButton,\r\n  Link,\r\n  styled,\r\n  ThemeProvider,\r\n  Tooltip,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { Fragment, useState } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\nimport { themeShadows } from '../MatxTheme/themeColors';\r\nimport { H5, Span } from '../Typography';\r\nimport BadgeSelected from './BadgeSelected';\r\n\r\nconst Label = styled(Span)(({ theme }) => ({\r\n  fontWeight: 700,\r\n  fontSize: '1rem',\r\n  cursor: 'pointer',\r\n  borderRadius: '4px',\r\n  marginBottom: '2.5rem',\r\n  letterSpacing: '1.5px',\r\n  padding: '.25rem .5rem',\r\n  transform: 'rotate(90deg)',\r\n  color: theme.palette.secondary.main,\r\n  backgroundColor: theme.palette.primary.dark,\r\n  '&:hover, &.open': {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n  },\r\n}));\r\n\r\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  right: 0,\r\n  zIndex: 50,\r\n  width: 320,\r\n  display: 'flex',\r\n  height: '100vh',\r\n  position: 'fixed',\r\n  paddingBottom: '32px',\r\n  flexDirection: 'column',\r\n  boxShadow: themeShadows[12],\r\n  background: theme.palette.background.default,\r\n  '& .helpText': { margin: '0px .5rem 1rem' },\r\n}));\r\n\r\nconst LayoutBox = styled(BadgeSelected)(() => ({\r\n  width: '100%',\r\n  height: '152px !important',\r\n  cursor: 'pointer',\r\n  marginTop: '12px',\r\n  marginBottom: '12px',\r\n  '& .layout-name': { display: 'none' },\r\n  '&:hover .layout-name': {\r\n    zIndex: 12,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    background: 'rgba(0,0,0,0.3)',\r\n  },\r\n}));\r\n\r\nconst Controller = styled('div')(() => ({\r\n  minHeight: 58,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  marginBottom: '16px',\r\n  padding: '14px 20px',\r\n  boxShadow: themeShadows[6],\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({ width: '100%' }));\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  paddingLeft: '16px',\r\n  paddingRight: '16px',\r\n}));\r\n\r\nconst MatxCustomizer = () => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const { settings, updateSettings } = useSettings();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  const tooglePanel = () => setOpen(!open);\r\n\r\n  const handleTabChange = (index) => setTabIndex(index);\r\n\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n        <Label className=\"open\" onClick={tooglePanel}>\r\n          DEMOS\r\n        </Label>\r\n      </Tooltip>\r\n\r\n      <ThemeProvider theme={activeTheme}>\r\n        <Drawer\r\n          open={open}\r\n          anchor=\"right\"\r\n          variant=\"temporary\"\r\n          onClose={tooglePanel}\r\n          ModalProps={{ keepMounted: true }}\r\n        >\r\n          <MaxCustomaizer>\r\n            <Controller>\r\n              <Box display=\"flex\">\r\n                <Icon className=\"icon\" color=\"primary\">\r\n                  settings\r\n                </Icon>\r\n                <H5 sx={{ ml: 1, fontSize: '1rem' }}>Theme Settings</H5>\r\n              </Box>\r\n\r\n              <IconButton onClick={tooglePanel}>\r\n                <Icon className=\"icon\">close</Icon>\r\n              </IconButton>\r\n            </Controller>\r\n\r\n            <Box px={3} mb={2} display=\"flex\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => handleTabChange(0)}\r\n                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                sx={{ mr: 2 }}\r\n              >\r\n                Demos\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => handleTabChange(1)}\r\n                color={tabIndex === 1 ? 'secondary' : 'primary'}\r\n              >\r\n                Settings\r\n              </Button>\r\n            </Box>\r\n\r\n            <StyledScrollBar options={{ suppressScrollX: true }}>\r\n              {tabIndex === 0 && (\r\n                <Box sx={{ mb: 4, mx: 3 }}>\r\n                  <Box sx={{ color: secondary }}>Layouts</Box>\r\n\r\n                  <Box display=\"flex\" flexDirection=\"column\">\r\n                    {demoLayouts.map((layout) => (\r\n                      <LayoutBox\r\n                        key={layout.name}\r\n                        color=\"secondary\"\r\n                        badgeContent={'Pro'}\r\n                        invisible={!layout.isPro}\r\n                      >\r\n                        <Card\r\n                          elevation={4}\r\n                          sx={{ position: 'relative' }}\r\n                          onClick={() => updateSettings(layout.options)}\r\n                        >\r\n                          <Box sx={{ overflow: 'hidden' }} className=\"layout-name\">\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                              {layout.name}\r\n                            </Button>\r\n                          </Box>\r\n\r\n                          <IMG src={layout.thumbnail} alt={layout.name} />\r\n                        </Card>\r\n                      </LayoutBox>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n\r\n              {/* END LAYOUT */}\r\n              {tabIndex === 1 && (\r\n                <div>\r\n                  <div className=\"helpText\">\r\n                    We used React context API to control layout. Check out the{' '}\r\n                    <Link href=\"http://demos.example.com/matx-react-doc/layout.html\" target=\"_blank\">\r\n                      Documentation\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </StyledScrollBar>\r\n          </MaxCustomaizer>\r\n        </Drawer>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst demoLayouts = [\r\n  {\r\n    isPro: false,\r\n    name: 'Light Sidebar',\r\n    thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n    options: {\r\n      activeTheme: 'blue',\r\n      activeLayout: 'layout1',\r\n      layout1Settings: {\r\n        topbar: { theme: 'blueDark', fixed: true },\r\n        leftSidebar: { mode: 'full', theme: 'whiteBlue', bgOpacity: 0.98 },\r\n      },\r\n      footer: { theme: 'slateDark1' },\r\n    },\r\n  },\r\n  {\r\n    isPro: false,\r\n    name: 'Compact Sidebar',\r\n    thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n    options: {\r\n      activeTheme: 'blue',\r\n      activeLayout: 'layout1',\r\n      layout1Settings: {\r\n        topbar: { theme: 'whiteBlue', fixed: true },\r\n        leftSidebar: { mode: 'compact', theme: 'slateDark1', bgOpacity: 0.92 },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    isPro: false,\r\n    name: 'Dark Sidebar',\r\n    thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n    options: {\r\n      activeTheme: 'blue',\r\n      activeLayout: 'layout1',\r\n      layout1Settings: {\r\n        topbar: { theme: 'blueDark', fixed: true },\r\n        leftSidebar: { mode: 'full', theme: 'slateDark1', bgOpacity: 0.92 },\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nexport default MatxCustomizer;\r\n","import { Badge, Button, Drawer, Icon, IconButton, ThemeProvider } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport {\r\n  deleteProductFromCart,\r\n  getCartList,\r\n  updateCartAmount,\r\n} from 'app/redux/actions/EcommerceActions';\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { themeShadows } from './MatxTheme/themeColors';\r\nimport { H6, Small } from './Typography';\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n  '& span': {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  '& #disable': {\r\n    color: theme.palette.text.disabled,\r\n  },\r\n}));\r\n\r\nconst MiniCart = styled('div')(({ theme }) => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  width: sideNavWidth,\r\n}));\r\n\r\nconst CartBox = styled('div')(() => ({\r\n  padding: '4px',\r\n  paddingLeft: '16px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  boxShadow: themeShadows[6],\r\n  height: topBarHeight,\r\n  '& h5': {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    marginLeft: '16px',\r\n    fontWeight: '500',\r\n  },\r\n}));\r\n\r\nconst ProductBox = styled('div')(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: '8px 8px',\r\n  transition: 'background 300ms ease',\r\n  '&:hover': {\r\n    background: 'rgba(0,0,0,0.01)',\r\n  },\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({\r\n  width: 48,\r\n}));\r\n\r\nconst ProductDetails = styled('div')(() => ({\r\n  marginRight: '8',\r\n  textAlign: 'center',\r\n  flexGrow: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  '& h6': {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    display: 'block',\r\n    width: 120,\r\n    marginBottom: '4px',\r\n  },\r\n}));\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart({ container }) {\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [panelOpen, setPanelOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const { cartList } = useSelector((state) => state.ecommerce);\r\n  const { settings } = useSettings();\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  if (!cartListLoaded) {\r\n    dispatch(getCartList(user.id));\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  const handleDrawerToggle = () => {\r\n    setPanelOpen(!panelOpen);\r\n  };\r\n\r\n  const handleCheckoutClick = () => {\r\n    if (totalCost > 0) {\r\n      navigate('/ecommerce/checkout');\r\n      setPanelOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n\r\n    cartList.forEach((product) => {\r\n      total += product.price * product.amount;\r\n    });\r\n    setTotalCost(total);\r\n  }, [cartList]);\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton onClick={handleDrawerToggle}>\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon sx={{ color: textColor }}>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          anchor={'right'}\r\n          open={panelOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n        >\r\n          <MiniCart>\r\n            <CartBox>\r\n              <Icon color=\"primary\">shopping_cart</Icon>\r\n              <h5>Cart</h5>\r\n            </CartBox>\r\n\r\n            <Box flexGrow={1} overflow=\"auto\">\r\n              {cartList.map((product) => (\r\n                <ProductBox key={product.id}>\r\n                  <Box mr=\"4px\" display=\"flex\" flexDirection=\"column\">\r\n                    <StyledIconButton\r\n                      size=\"small\"\r\n                      onClick={() =>\r\n                        dispatch(updateCartAmount(user.id, product.id, product.amount + 1))\r\n                      }\r\n                    >\r\n                      <Icon sx={{ cursor: 'pinter' }}>keyboard_arrow_up</Icon>\r\n                    </StyledIconButton>\r\n                    <StyledIconButton\r\n                      disabled={!(product.amount - 1)}\r\n                      size=\"small\"\r\n                      onClick={() =>\r\n                        dispatch(updateCartAmount(user.id, product.id, product.amount - 1))\r\n                      }\r\n                    >\r\n                      <Icon id={!(product.amount - 1) && 'disable'}>keyboard_arrow_down</Icon>\r\n                    </StyledIconButton>\r\n                  </Box>\r\n                  <Box mr={1}>\r\n                    <IMG src={product.imgUrl} alt={product.title} />\r\n                  </Box>\r\n                  <ProductDetails>\r\n                    <H6>{product.title}</H6>\r\n                    <Small sx={{ color: secondary }}>\r\n                      ${product.price} x {product.amount}\r\n                    </Small>\r\n                  </ProductDetails>\r\n                  <StyledIconButton\r\n                    size=\"small\"\r\n                    onClick={() => dispatch(deleteProductFromCart(user.userId, product.id))}\r\n                  >\r\n                    <Icon fontSize=\"small\">clear</Icon>\r\n                  </StyledIconButton>\r\n                </ProductBox>\r\n              ))}\r\n            </Box>\r\n\r\n            <Button\r\n              sx={{ width: '100%', borderRadius: 0 }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleCheckoutClick}\r\n            >\r\n              Checkout (${totalCost.toFixed(2)})\r\n            </Button>\r\n          </MiniCart>\r\n        </Drawer>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","import { Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { Chatbox, ChatHead } from 'app/components';\r\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer';\r\nimport ShoppingCart from '../ShoppingCart';\r\nimport { Span } from '../Typography';\r\n\r\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\r\n  position: 'fixed',\r\n  height: '100vh',\r\n  width: width,\r\n  right: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  boxShadow: theme.shadows[8],\r\n  backgroundColor: theme.palette.primary.main,\r\n  zIndex: 98,\r\n  transition: 'all 0.15s ease',\r\n  color: theme.palette.text.primary,\r\n  '@global': {\r\n    '@media screen and (min-width: 767px)': {\r\n      '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\r\n        marginRight: (props) => props.width,\r\n      },\r\n      '.matx-customizer': {\r\n        right: (props) => props.width,\r\n      },\r\n    },\r\n    '@media screen and (max-width: 959px)': {\r\n      '.toolbar-menu-wrap .menu-area': {\r\n        width: (props) => `calc(100% - ${props.width})`,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SecondarySidebarContent = () => {\r\n  const { palette } = useTheme();\r\n  const textColor = palette.primary.contrastText;\r\n  return (\r\n    <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\r\n      <Span sx={{ m: 'auto' }}></Span>\r\n      {/* <MatxCustomizer /> */}\r\n      <ShoppingCart />\r\n\r\n      <ChatHead\r\n        icon={\r\n          <IconButton sx={{ my: '12px', color: textColor }} size=\"small\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n        }\r\n      >\r\n        <Chatbox />\r\n      </ChatHead>\r\n      <Span sx={{ m: 'auto' }}></Span>\r\n    </SidebarRoot>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebarContent;\r\n","import { Fab, Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport clsx from 'clsx';\r\n\r\nconst Toggle = styled('div')(() => ({\r\n  position: 'fixed',\r\n  right: '30px',\r\n  bottom: '50px',\r\n  zIndex: 99,\r\n  transition: 'all 0.15s ease',\r\n  '&.open': {\r\n    right: '10px',\r\n  },\r\n}));\r\n\r\nconst SecondarySidebarToggle = () => {\r\n  const { settings, updateSettings } = useSettings();\r\n\r\n  const toggle = () => {\r\n    updateSettings({\r\n      secondarySidebar: { open: !settings.secondarySidebar.open },\r\n    });\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.primary.contrastText;\r\n\r\n  return (\r\n    <Toggle className={clsx({ open: settings.secondarySidebar.open })}>\r\n      {settings.secondarySidebar.open && (\r\n        <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n          <Icon sx={{ color: textColor }}>close</Icon>\r\n        </IconButton>\r\n      )}\r\n\r\n      {!settings.secondarySidebar.open && (\r\n        <Fab color=\"primary\" aria-label=\"expand\" onClick={toggle}>\r\n          <Icon sx={{ color: textColor }}>settings</Icon>\r\n        </Fab>\r\n      )}\r\n    </Toggle>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebarToggle;\r\n","import useSettings from 'app/hooks/useSettings';\r\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme';\r\nimport SecondarySidebarContent from './SecondarySidebarContent';\r\nimport SecondarySidebarToggle from './SecondarySidebarToggle';\r\n\r\nconst SecondarySidebar = () => {\r\n  const { settings } = useSettings();\r\n  const secondarySidebarTheme = settings.themes[settings.secondarySidebar.theme];\r\n\r\n  return (\r\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n      {/* {settings.secondarySidebar.open && <SecondarySidebarContent />} */}\r\n      {/* <SecondarySidebarToggle /> */}\r\n    </SecondarySidenavTheme>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebar;\r\n","import { Box, styled } from '@mui/material';\r\nimport { MatxLogo } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { Span } from './Typography';\r\n\r\nconst BrandRoot = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '20px 18px 20px 29px',\r\n}));\r\n\r\nconst StyledSpan = styled(Span)(({ mode }) => ({\r\n  fontSize: 18,\r\n  marginLeft: '.5rem',\r\n  display: mode === 'compact' ? 'none' : 'block',\r\n}));\r\n\r\nconst Brand = ({ children }) => {\r\n  const { settings } = useSettings();\r\n  const leftSidebar = settings.layout1Settings.leftSidebar;\r\n  const { mode } = leftSidebar;\r\n\r\n  return (\r\n    <BrandRoot>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {/* <MatxLogo /> */}\r\n        <img src=\"/assets/app-images/estimator_logo.svg\" width=\"70%\" alt=\"\" />\r\n        {/* <StyledSpan mode={mode} className=\"sidenavHoverShow\">\r\n          Estimator\r\n        </StyledSpan> */}\r\n      </Box>\r\n\r\n      <Box className=\"sidenavHoverShow\" sx={{ display: mode === 'compact' ? 'none' : 'block' }}>\r\n        {children || null}\r\n      </Box>\r\n    </BrandRoot>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n","import { styled } from '@mui/system';\r\nimport { MatxVerticalNav } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { navigations } from 'app/navigations';\r\nimport { Fragment } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  paddingLeft: '1rem',\r\n  paddingRight: '1rem',\r\n  position: 'relative',\r\n}));\r\n\r\nconst SideNavMobile = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n  width: '100vw',\r\n  background: 'rgba(0, 0, 0, 0.54)',\r\n  zIndex: -1,\r\n  [theme.breakpoints.up('lg')]: { display: 'none' },\r\n}));\r\n\r\nconst Sidenav = ({ children }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledScrollBar options={{ suppressScrollX: true }}>\r\n        {children}\r\n        <MatxVerticalNav items={navigations} />\r\n      </StyledScrollBar>\r\n\r\n      <SideNavMobile onClick={() => updateSidebarMode({ mode: 'close' })} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","import { Hidden, Switch } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport React from 'react';\r\nimport Brand from '../../Brand';\r\nimport Sidenav from '../../Sidenav';\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  height: '100vh',\r\n  width: width,\r\n  boxShadow: themeShadows[8],\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundPosition: 'top',\r\n  backgroundSize: 'cover',\r\n  zIndex: 111,\r\n  overflow: 'hidden',\r\n  color: theme.palette.text.primary,\r\n  transition: 'all 250ms ease-in-out',\r\n  backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\r\n  '&:hover': {\r\n    width: sideNavWidth,\r\n    '& .sidenavHoverShow': {\r\n      display: 'block',\r\n    },\r\n    '& .compactNavItem': {\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n      '& .nav-bullet': {\r\n        display: 'block',\r\n      },\r\n      '& .nav-bullet-text': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n}));\r\n\r\nconst Layout1Sidenav = () => {\r\n  const theme = useTheme();\r\n  const { settings, updateSettings } = useSettings();\r\n  const leftSidebar = settings.layout1Settings.leftSidebar;\r\n  const { mode, bgImgURL } = leftSidebar;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (mode) {\r\n      case 'compact':\r\n        return sidenavCompactWidth;\r\n      default:\r\n        return sideNavWidth;\r\n    }\r\n  };\r\n  const primaryRGB = convertHexToRGB(theme.palette.primary.main);\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    updateSettings({\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSidenavToggle = () => {\r\n    updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' });\r\n  };\r\n\r\n  return (\r\n    <SidebarNavRoot bgImgURL={bgImgURL} primaryBg={primaryRGB} width={getSidenavWidth()}>\r\n      <NavListBox>\r\n        <Brand>\r\n          {/* <Hidden smDown>\r\n            <Switch\r\n              onChange={handleSidenavToggle}\r\n              checked={leftSidebar.mode !== 'full'}\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n            />\r\n          </Hidden> */}\r\n        </Brand>\r\n        <Sidenav />\r\n      </NavListBox>\r\n    </SidebarNavRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Sidenav);\r\n","import { Avatar, Hidden, Icon, IconButton, MenuItem, useMediaQuery } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { MatxMenu, MatxSearchBox } from 'app/components';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport { NotificationProvider } from 'app/contexts/NotificationContext';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Span } from '../../../components/Typography';\r\nimport NotificationBar from '../../NotificationBar/NotificationBar';\r\nimport ShoppingCart from '../../ShoppingCart';\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst TopbarRoot = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 96,\r\n  transition: 'all 0.3s ease',\r\n  boxShadow: themeShadows[8],\r\n  height: topBarHeight,\r\n}));\r\n\r\nconst TopbarContainer = styled(Box)(({ theme }) => ({\r\n  padding: '8px',\r\n  paddingLeft: 18,\r\n  paddingRight: 20,\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  background: theme.palette.primary.main,\r\n  [theme.breakpoints.down('sm')]: {\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    paddingLeft: 14,\r\n    paddingRight: 16,\r\n  },\r\n}));\r\n\r\nconst UserMenu = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  borderRadius: 24,\r\n  padding: 4,\r\n  '& span': { margin: '0 8px' },\r\n}));\r\n\r\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  minWidth: 185,\r\n  '& a': {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n  },\r\n  '& span': { marginRight: '10px', color: theme.palette.text.primary },\r\n}));\r\n\r\nconst IconBox = styled('div')(({ theme }) => ({\r\n  display: 'inherit',\r\n  [theme.breakpoints.down('md')]: { display: 'none !important' },\r\n}));\r\n\r\nconst Layout1Topbar = () => {\r\n  const theme = useTheme();\r\n  const { settings, updateSettings } = useSettings();\r\n  const { logout, user } = useAuth();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    updateSettings({\r\n      layout1Settings: { leftSidebar: { ...sidebarSettings } },\r\n    });\r\n  };\r\n\r\n  const handleSidebarToggle = () => {\r\n    let { layout1Settings } = settings;\r\n    let mode;\r\n    if (isMdScreen) {\r\n      mode = layout1Settings.leftSidebar.mode === 'close' ? 'mobile' : 'close';\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full';\r\n    }\r\n    updateSidebarMode({ mode });\r\n  };\r\n\r\n  return (\r\n    <TopbarRoot>\r\n      <TopbarContainer>\r\n        <Box display=\"flex\">\r\n          <StyledIconButton onClick={handleSidebarToggle}>\r\n            <Icon>menu</Icon>\r\n          </StyledIconButton>\r\n\r\n          {/* <IconBox>\r\n            <StyledIconButton>\r\n              <Icon>mail_outline</Icon>\r\n            </StyledIconButton>\r\n\r\n            <StyledIconButton>\r\n              <Icon>web_asset</Icon>\r\n            </StyledIconButton>\r\n\r\n            <StyledIconButton>\r\n              <Icon>star_outline</Icon>\r\n            </StyledIconButton>\r\n          </IconBox> */}\r\n        </Box>\r\n\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {/* <MatxSearchBox /> */}\r\n\r\n          {/* <NotificationProvider>\r\n            <NotificationBar />\r\n          </NotificationProvider> */}\r\n\r\n          {/* <ShoppingCart /> */}\r\n\r\n          <MatxMenu\r\n            menuButton={\r\n              <UserMenu>\r\n                <Hidden xsDown>\r\n                  <Span>\r\n                    Hi <strong>{user.name}</strong>\r\n                  </Span>\r\n                </Hidden>\r\n                <Avatar src={user.avatar} sx={{ cursor: 'pointer' }} />\r\n              </UserMenu>\r\n            }\r\n          >\r\n            <StyledItem>\r\n              <Link to=\"/\">\r\n                <Icon> home </Icon>\r\n                <Span> Home </Span>\r\n              </Link>\r\n            </StyledItem>\r\n\r\n            <StyledItem>\r\n              <Link to=\"/page-layouts/user-profile\">\r\n                <Icon> person </Icon>\r\n                <Span> Profile </Span>\r\n              </Link>\r\n            </StyledItem>\r\n\r\n            <StyledItem>\r\n              <Icon> settings </Icon>\r\n              <Span> Settings </Span>\r\n            </StyledItem>\r\n\r\n            <StyledItem onClick={logout}>\r\n              <Icon> power_settings_new </Icon>\r\n              <Span> Logout </Span>\r\n            </StyledItem>\r\n          </MatxMenu>\r\n        </Box>\r\n      </TopbarContainer>\r\n    </TopbarRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Topbar);\r\n","import { Badge, Button, Card, Drawer, Icon, IconButton, ThemeProvider } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport useNotification from 'app/hooks/useNotification';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant';\r\nimport { getTimeDifference } from 'app/utils/utils.js';\r\nimport React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { themeShadows } from '../MatxTheme/themeColors';\r\nimport { Paragraph, Small } from '../Typography';\r\n\r\nconst Notification = styled('div')(() => ({\r\n  padding: '16px',\r\n  marginBottom: '16px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  boxShadow: themeShadows[6],\r\n  '& h5': {\r\n    marginLeft: '8px',\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    fontWeight: '500',\r\n  },\r\n}));\r\n\r\nconst NotificationCard = styled(Box)(({ theme }) => ({\r\n  position: 'relative',\r\n  '&:hover': {\r\n    '& .messageTime': {\r\n      display: 'none',\r\n    },\r\n    '& .deleteButton': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  '& .messageTime': {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  '& .icon': { fontSize: '1.25rem' },\r\n}));\r\n\r\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\r\n  opacity: '0',\r\n  position: 'absolute',\r\n  right: 5,\r\n  marginTop: 9,\r\n  marginRight: '24px',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst CardLeftContent = styled('div')(({ theme }) => ({\r\n  padding: '12px 8px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n  '& small': {\r\n    fontWeight: '500',\r\n    marginLeft: '16px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Heading = styled('span')(({ theme }) => ({\r\n  fontWeight: '500',\r\n  marginLeft: '16px',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst NotificationBar = ({ container }) => {\r\n  const { settings } = useSettings();\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n  const { deleteNotification, clearNotifications, notifications } = useNotification();\r\n\r\n  const handleDrawerToggle = () => {\r\n    setPanelOpen(!panelOpen);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton onClick={handleDrawerToggle}>\r\n        <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n          <Icon sx={{ color: textColor }}>notifications</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Drawer\r\n          width={'100px'}\r\n          container={container}\r\n          variant=\"temporary\"\r\n          anchor={'right'}\r\n          open={panelOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n        >\r\n          <Box sx={{ width: sideNavWidth }}>\r\n            <Notification>\r\n              <Icon color=\"primary\">notifications</Icon>\r\n              <h5>Notifications</h5>\r\n            </Notification>\r\n\r\n            {notifications?.map((notification) => (\r\n              <NotificationCard key={notification.id}>\r\n                <DeleteButton\r\n                  size=\"small\"\r\n                  className=\"deleteButton\"\r\n                  onClick={() => deleteNotification(notification.id)}\r\n                >\r\n                  <Icon className=\"icon\">clear</Icon>\r\n                </DeleteButton>\r\n                <Link\r\n                  to={`/${notification.path}`}\r\n                  onClick={handleDrawerToggle}\r\n                  style={{ textDecoration: 'none' }}\r\n                >\r\n                  <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\r\n                    <CardLeftContent>\r\n                      <Box display=\"flex\">\r\n                        <Icon className=\"icon\" color={notification.icon.color}>\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                        <Heading>{notification.heading}</Heading>\r\n                      </Box>\r\n                      <Small className=\"messageTime\">\r\n                        {getTimeDifference(new Date(notification.timestamp))}\r\n                        ago\r\n                      </Small>\r\n                    </CardLeftContent>\r\n                    <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                      <Paragraph sx={{ m: 0 }}>{notification.title}</Paragraph>\r\n                      <Small sx={{ color: secondary }}>{notification.subtitle}</Small>\r\n                    </Box>\r\n                  </Card>\r\n                </Link>\r\n              </NotificationCard>\r\n            ))}\r\n            {!!notifications?.length && (\r\n              <Box sx={{ color: secondary }}>\r\n                <Button onClick={clearNotifications}>Clear Notifications</Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Drawer>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotificationBar;\r\n","import { ThemeProvider, useMediaQuery } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { MatxSuspense } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Footer from '../../Footer';\r\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme';\r\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar';\r\nimport Layout1Sidenav from './Layout1Sidenav';\r\nimport Layout1Topbar from './Layout1Topbar';\r\n\r\nconst Layout1Root = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  background: theme.palette.background.default,\r\n}));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  overflowY: 'auto',\r\n  overflowX: 'hidden',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  height: '100%',\r\n  position: 'relative',\r\n  display: 'flex',\r\n  flexGrow: '1',\r\n  flexDirection: 'column',\r\n}));\r\n\r\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\r\n  height: '100vh',\r\n  display: 'flex',\r\n  flexGrow: '1',\r\n  flexDirection: 'column',\r\n  verticalAlign: 'top',\r\n  marginLeft: width,\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  transition: 'all 0.3s ease',\r\n  marginRight: secondarySidebar.open ? 50 : 0,\r\n}));\r\n\r\nconst Layout1 = () => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const { layout1Settings, secondarySidebar } = settings;\r\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\r\n  const {\r\n    leftSidebar: { mode: sidenavMode, show: showSidenav },\r\n  } = layout1Settings;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (sidenavMode) {\r\n      case 'full':\r\n        return sideNavWidth;\r\n\r\n      case 'compact':\r\n        return sidenavCompactWidth;\r\n\r\n      default:\r\n        return '0px';\r\n    }\r\n  };\r\n\r\n  const sidenavWidth = getSidenavWidth();\r\n  const theme = useTheme();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const ref = useRef({ isMdScreen, settings });\r\n  const layoutClasses = `theme-${theme.palette.type}`;\r\n\r\n  useEffect(() => {\r\n    let { settings } = ref.current;\r\n    let sidebarMode = settings.layout1Settings.leftSidebar.mode;\r\n    if (settings.layout1Settings.leftSidebar.show) {\r\n      let mode = isMdScreen ? 'close' : sidebarMode;\r\n      updateSettings({ layout1Settings: { leftSidebar: { mode } } });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isMdScreen]);\r\n\r\n  return (\r\n    <Layout1Root className={layoutClasses}>\r\n      {showSidenav && sidenavMode !== 'close' && (\r\n        <SidenavTheme>\r\n          <Layout1Sidenav />\r\n        </SidenavTheme>\r\n      )}\r\n\r\n      <LayoutContainer width={sidenavWidth} secondarySidebar={secondarySidebar}>\r\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n          <ThemeProvider theme={topbarTheme}>\r\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n          </ThemeProvider>\r\n        )}\r\n\r\n        {settings.perfectScrollbar && (\r\n          <StyledScrollBar>\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <ThemeProvider theme={topbarTheme}>\r\n                <Layout1Topbar />\r\n              </ThemeProvider>\r\n            )}\r\n            <Box flexGrow={1} position=\"relative\">\r\n              <MatxSuspense>\r\n                <Outlet />\r\n              </MatxSuspense>\r\n            </Box>\r\n\r\n            {/* {settings.footer.show && !settings.footer.fixed && <Footer />} */}\r\n          </StyledScrollBar>\r\n        )}\r\n\r\n        {!settings.perfectScrollbar && (\r\n          <ContentBox>\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <ThemeProvider theme={topbarTheme}>\r\n                <Layout1Topbar />\r\n              </ThemeProvider>\r\n            )}\r\n\r\n            <Box flexGrow={1} position=\"relative\">\r\n              <MatxSuspense>\r\n                <Outlet />\r\n              </MatxSuspense>\r\n            </Box>\r\n\r\n            {/* {settings.footer.show && !settings.footer.fixed && <Footer />} */}\r\n          </ContentBox>\r\n        )}\r\n\r\n        {/* {settings.footer.show && settings.footer.fixed && <Footer />} */}\r\n      </LayoutContainer>\r\n\r\n      {settings.secondarySidebar.show && <SecondarySidebar />}\r\n    </Layout1Root>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1);\r\n","import { differenceInSeconds } from 'date-fns';\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n  // check if it's a rgba\r\n  if (hex.match('rgba')) {\r\n    let triplet = hex.slice(5).split(',').slice(0, -1).join(',');\r\n    return triplet;\r\n  }\r\n\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split('');\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = '0x' + c.join('');\r\n\r\n    return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',');\r\n  }\r\n};\r\n\r\nexport function debounce(func, wait, immediate) {\r\n  var timeout;\r\n  return function () {\r\n    var context = this,\r\n      args = arguments;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    }, wait);\r\n    if (immediate && !timeout) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function isMobile() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 767px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isMdScreen() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 1199px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n  if (!window && !elm) {\r\n    return;\r\n  }\r\n  if (elm) return elm.scrollTop;\r\n  // Firefox, Chrome, Opera, Safari\r\n  if (window.pageYOffset) return window.pageYOffset;\r\n  // Internet Explorer 6 - standards mode\r\n  if (document.documentElement && document.documentElement.scrollTop)\r\n    return document.documentElement.scrollTop;\r\n  // Internet Explorer 6, 7 and 8\r\n  if (document.body.scrollTop) return document.body.scrollTop;\r\n  return 0;\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n  var y = elm.offsetTop;\r\n  var node = elm;\r\n  while (node.offsetParent && node.offsetParent !== document.body) {\r\n    node = node.offsetParent;\r\n    y += node.offsetTop;\r\n  }\r\n  return y;\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n  var elm = document.getElementById(elmID);\r\n\r\n  if (!elmID || !elm) {\r\n    return;\r\n  }\r\n\r\n  var startY = currentYPosition(scrollableElement);\r\n  var stopY = elmYPosition(elm);\r\n\r\n  var distance = stopY > startY ? stopY - startY : startY - stopY;\r\n  if (distance < 100) {\r\n    scrollTo(0, stopY);\r\n    return;\r\n  }\r\n  var speed = Math.round(distance / 50);\r\n  if (speed >= 20) speed = 20;\r\n  var step = Math.round(distance / 25);\r\n  var leapY = stopY > startY ? startY + step : startY - step;\r\n  var timer = 0;\r\n  if (stopY > startY) {\r\n    for (var i = startY; i < stopY; i += step) {\r\n      setTimeout(\r\n        (function (leapY) {\r\n          return () => {\r\n            scrollableElement.scrollTo(0, leapY);\r\n          };\r\n        })(leapY),\r\n        timer * speed\r\n      );\r\n      leapY += step;\r\n      if (leapY > stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return;\r\n  }\r\n  for (let i = startY; i > stopY; i -= step) {\r\n    setTimeout(\r\n      (function (leapY) {\r\n        return () => {\r\n          scrollableElement.scrollTo(0, leapY);\r\n        };\r\n      })(leapY),\r\n      timer * speed\r\n    );\r\n    leapY -= step;\r\n    if (leapY < stopY) leapY = stopY;\r\n    timer++;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n  let difference = differenceInSeconds(new Date(), date);\r\n\r\n  if (difference < 60) return `${Math.floor(difference)} sec`;\r\n  else if (difference < 3600) return `${Math.floor(difference / 60)} min`;\r\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} h`;\r\n  else if (difference < 86400 * 30) return `${Math.floor(difference / 86400)} d`;\r\n  else if (difference < 86400 * 30 * 12) return `${Math.floor(difference / 86400 / 30)} mon`;\r\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`;\r\n}\r\n\r\nexport function generateRandomId() {\r\n  let tempId = Math.random().toString();\r\n  let uid = tempId.substr(2, tempId.length - 1);\r\n  return uid;\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n  var params = {};\r\n  var search = decodeURIComponent(\r\n    window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n  );\r\n  var definitions = search.split('&');\r\n  definitions.forEach(function (val, key) {\r\n    var parts = val.split('=', 2);\r\n    params[parts[0]] = parts[1];\r\n  });\r\n  return prop && prop in params ? params[prop] : params;\r\n}\r\n\r\nexport function classList(classes) {\r\n  return Object.entries(classes)\r\n    .filter((entry) => entry[1])\r\n    .map((entry) => entry[0])\r\n    .join(' ');\r\n}\r\n\r\nexport const flat = (array) => {\r\n  var result = [];\r\n  array.forEach(function (a) {\r\n    result.push(a);\r\n    if (Array.isArray(a.children)) {\r\n      result = result.concat(flat(a.children));\r\n    }\r\n  });\r\n  return result;\r\n};\r\n"],"names":["styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","maxWidth","_ref","children","theme","useTheme","settings","useSettings","sidenavTheme","themes","layout1Settings","leftSidebar","_jsx","ThemeProvider","classes","open","Badge","top","right","height","borderRadius","Span","fontWeight","fontSize","cursor","marginBottom","letterSpacing","transform","color","palette","secondary","main","backgroundColor","primary","dark","contrastText","_ref2","zIndex","position","paddingBottom","boxShadow","themeShadows","background","default","BadgeSelected","marginTop","justifyContent","Scrollbar","paddingLeft","paddingRight","IconButton","text","disabled","sideNavWidth","marginLeft","transition","marginRight","textAlign","flexGrow","whiteSpace","overflow","textOverflow","bottom","shadows","props","concat","secondarySidebarTheme","secondarySidebar","SecondarySidenavTheme","BrandRoot","Box","mode","_jsxs","src","alt","className","sx","StyledScrollBar","SideNavMobile","_defineProperty","left","breakpoints","up","_ref3","_useSettings","updateSettings","Fragment","options","suppressScrollX","MatxVerticalNav","items","navigations","onClick","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","_objectSpread","updateSidebarMode","SidebarNavRoot","primaryBg","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","NavListBox","Layout1Sidenav","primaryRGB","convertHexToRGB","sidenavCompactWidth","Brand","Sidenav","React","StyledIconButton","opacity","_ref4","TopbarRoot","TopbarContainer","down","UserMenu","StyledItem","MenuItem","_ref5","minWidth","textDecoration","Layout1Topbar","_ref6","_useAuth","useAuth","logout","user","isMdScreen","useMediaQuery","Icon","MatxMenu","menuButton","Hidden","xsDown","name","Avatar","avatar","Link","to","Layout1Root","ContentBox","overflowY","overflowX","LayoutContainer","verticalAlign","Layout1","topbarTheme","topbar","_layout1Settings$left","sidenavMode","showSidenav","show","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","type","useEffect","current","sidebarMode","SidenavTheme","fixed","perfectScrollbar","MatxSuspense","Outlet","SecondarySidebar","hex","c","match","slice","split","join","test","substring","length"],"sourceRoot":""}