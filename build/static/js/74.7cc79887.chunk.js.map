{"version":3,"file":"static/js/74.7cc79887.chunk.js","mappings":"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","sources":["app/views/material-kit/auto-complete/AsyncAutocomplete.jsx","app/views/material-kit/auto-complete/AutocompleteCombo.jsx","app/views/material-kit/auto-complete/BadgeAutocomplete.jsx","app/views/material-kit/auto-complete/AppAutoComplete.jsx"],"sourcesContent":["// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport { Autocomplete, CircularProgress, styled, TextField } from '@mui/material';\r\nimport fetch from 'cross-fetch';\r\nimport React from 'react';\r\n\r\nconst AutoComplete = styled(Autocomplete)(() => ({ width: 300 }));\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => setTimeout(resolve, delay));\r\n}\r\n\r\nexport default function AsyncAutocomplete() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=5000');\r\n      await sleep(3000); // For demo purposes.\r\n      const countries = await response.json();\r\n\r\n      if (active) {\r\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <AutoComplete\r\n      open={open}\r\n      options={options}\r\n      loading={loading}\r\n      id=\"asynchronous-demo\"\r\n      onOpen={() => setOpen(true)}\r\n      onClose={() => setOpen(false)}\r\n      getOptionLabel={(option) => option.name}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Asynchronous\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Autocomplete, styled, TextField } from '@mui/material';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport React, { Fragment } from 'react';\r\n\r\nconst AutoComplete = styled(Autocomplete)(() => ({\r\n  width: 300,\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteCombo = () => {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleChange = (_, newValue) => {\r\n    if (newValue && newValue.inputValue) {\r\n      setValue({ label: newValue.inputValue });\r\n      return;\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const filterOptions = (options, params) => {\r\n    const filtered = filter(options, params);\r\n    if (params.inputValue !== '') {\r\n      filtered.push({ inputValue: params.inputValue, label: `Add \"${params.inputValue}\"` });\r\n    }\r\n    return filtered;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <AutoComplete\r\n        options={suggestions}\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n\r\n      <AutoComplete\r\n        value={value}\r\n        options={suggestions}\r\n        onChange={handleChange}\r\n        filterOptions={filterOptions}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.label;\r\n        }}\r\n        renderOption={(option) => option.label}\r\n        style={{ width: 300 }}\r\n        freeSolo\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n\r\n      <AutoComplete\r\n        options={suggestions}\r\n        getOptionLabel={(option) => option.label}\r\n        getOptionDisabled={(option) => option === suggestions[0] || option === suggestions[2]}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Disabled option\" variant=\"outlined\" fullWidth />\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AutocompleteCombo;\r\n","import { Autocomplete, Chip, TextField } from '@mui/material';\r\nimport { Box, useTheme } from '@mui/system';\r\n\r\nconst BadgeAutocomplete = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: 500,\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(3),\r\n        },\r\n      }}\r\n    >\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-standard\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"standard\"\r\n            label=\"Multiple values\"\r\n            placeholder=\"Favorites\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"filterSelectedOptions\"\r\n            placeholder=\"Favorites\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-filled\"\r\n        options={top100Films.map((option) => option.title)}\r\n        defaultValue={[top100Films[13].title]}\r\n        freeSolo\r\n        renderTags={(value, getTagProps) =>\r\n          value.map((option, index) => (\r\n            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n          ))\r\n        }\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"filled\"\r\n            label=\"freeSolo\"\r\n            placeholder=\"Favorites\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BadgeAutocomplete;\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  {\r\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964,\r\n  },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n","import { Box, styled } from '@mui/material';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport AsyncAutocomplete from './AsyncAutocomplete';\r\nimport AutocompleteCombo from './AutocompleteCombo';\r\nimport BadgeAutocomplete from './BadgeAutocomplete';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst AppAutoComplete = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb\r\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Autocomplete' }]}\r\n        />\r\n      </Box>\r\n\r\n      <SimpleCard title=\"autocomplete combo\">\r\n        <AutocompleteCombo />\r\n      </SimpleCard>\r\n\r\n      <Box py=\"12px\" />\r\n\r\n      <SimpleCard title=\"Asyncronous Autocomplete\">\r\n        <AsyncAutocomplete />\r\n      </SimpleCard>\r\n\r\n      <Box py=\"12px\" />\r\n\r\n      <SimpleCard title=\"Asyncronous Autocomplete\">\r\n        <BadgeAutocomplete />\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppAutoComplete;\r\n"],"names":["AutoComplete","styled","Autocomplete","width","sleep","delay","arguments","length","undefined","Promise","resolve","setTimeout","AsyncAutocomplete","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","options","setOptions","loading","active","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","countries","wrap","_context","prev","next","fetch","sent","json","Object","keys","map","key","item","stop","_jsx","id","onOpen","onClose","getOptionLabel","option","name","renderInput","params","TextField","_objectSpread","fullWidth","variant","label","InputProps","endAdornment","_jsxs","children","CircularProgress","color","size","marginBottom","suggestions","filter","createFilterOptions","value","setValue","Fragment","onChange","_","newValue","inputValue","filterOptions","filtered","push","concat","renderOption","style","freeSolo","getOptionDisabled","theme","useTheme","Box","sx","marginTop","spacing","multiple","top100Films","title","defaultValue","placeholder","filterSelectedOptions","renderTags","getTagProps","index","Chip","year","Container","_ref","_ref2","margin","_defineProperty","breakpoints","down","className","Breadcrumb","routeSegments","path","SimpleCard","AutocompleteCombo","py","BadgeAutocomplete"],"sourceRoot":""}