{"version":3,"file":"static/js/664.a9a1ade7.chunk.js","mappings":"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","sources":["app/views/sessions/JwtLogin.jsx"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { Paragraph } from 'app/components/Typography';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n  background: '#ffffff',\r\n  minHeight: '100% !important',\r\n  flexDirection: 'column',  \r\n  '& .card': {\r\n    maxWidth: 500,\r\n    minHeight: 400,\r\n    margin: '1rem',\r\n    display: 'flex',\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n    borderBottom: '6px solid #FD7744;',\r\n  },\r\n}));\r\n\r\n// inital login credentials\r\nconst initialValues = {\r\n  email: 'admin@estimator.com',\r\n  password: 'dummyPass',\r\n  remember: true,\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, 'Password must be 6 character length')\r\n    .required('Password is required!'),\r\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\r\n});\r\n\r\nconst JwtLogin = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(values.email, values.password);\r\n      navigate('/');\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JWTRoot>\r\n       <FlexBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\r\n              <img src=\"/assets/app-images/emergere_logo.svg\" alt=\"\" />\r\n            </FlexBox>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={12} xs={12}>\r\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\r\n              <img src=\"/assets/app-images/estimator_logo.svg\" alt=\"\" />\r\n            </JustifyBox>\r\n          </Grid>\r\n\r\n          <Grid item sm={12} xs={12}>\r\n            <ContentBox>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(errors.email && touched.email)}\r\n                      sx={{ mb: 3 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <FlexBox justifyContent=\"space-between\">\r\n                      {/* <FlexBox gap={1}>\r\n                        <Checkbox\r\n                          size=\"small\"\r\n                          name=\"remember\"\r\n                          onChange={handleChange}\r\n                          checked={values.remember}\r\n                          sx={{ padding: 0 }}\r\n                        />\r\n\r\n                        <Paragraph>Remember Me</Paragraph>\r\n                      </FlexBox> */}\r\n\r\n                      {/* <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}\r\n                      >\r\n                        Forgot password?\r\n                      </NavLink> */}\r\n                    </FlexBox>\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      variant=\"contained\"\r\n                      sx={{ my: 2, width:'100%' }}\r\n                    >\r\n                      Login\r\n                    </LoadingButton>\r\n\r\n                    {/* <Paragraph>\r\n                      Don't have an account?\r\n                      <NavLink\r\n                        to=\"/session/signup\"\r\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\r\n                      >\r\n                        Register\r\n                      </NavLink>\r\n                    </Paragraph> */}\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </JWTRoot>\r\n  );\r\n};\r\n\r\nexport default JwtLogin;\r\n"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","flexDirection","maxWidth","margin","borderRadius","borderBottom","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","useTheme","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","login","useAuth","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","t0","stop","_x","apply","arguments","_jsxs","children","_jsx","p","sx","minWidth","src","alt","Card","className","Grid","container","item","sm","xs","Formik","onSubmit","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","mb","LoadingButton","color","my","width"],"sourceRoot":""}