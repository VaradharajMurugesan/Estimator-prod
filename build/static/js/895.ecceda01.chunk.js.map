{"version":3,"file":"static/js/895.ecceda01.chunk.js","mappings":"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","sources":["app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"sourcesContent":["import {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst subscribarList = [\r\n  {\r\n    name: \"john doe\",\r\n    date: \"18 january, 2019\",\r\n    amount: 1000,\r\n    status: \"close\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"kessy bryan\",\r\n    date: \"10 january, 2019\",\r\n    amount: 9000,\r\n    status: \"open\",\r\n    company: \"My Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"kessy bryan\",\r\n    date: \"10 january, 2019\",\r\n    amount: 9000,\r\n    status: \"open\",\r\n    company: \"My Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"james cassegne\",\r\n    date: \"8 january, 2019\",\r\n    amount: 5000,\r\n    status: \"close\",\r\n    company: \"Collboy Tech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n];\r\n\r\nconst PaginationTable = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" overflow=\"auto\">\r\n      <StyledTable>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Title of Estimation</TableCell>\r\n            <TableCell align=\"center\">Company</TableCell>\r\n            <TableCell align=\"center\">Start Date</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Amount</TableCell>\r\n            <TableCell align=\"right\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {subscribarList\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((subscriber, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"left\">{subscriber.name}</TableCell>\r\n                <TableCell align=\"center\">{subscriber.company}</TableCell>\r\n                <TableCell align=\"center\">{subscriber.date}</TableCell>\r\n                <TableCell align=\"center\">{subscriber.status}</TableCell>\r\n                <TableCell align=\"center\">${subscriber.amount}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IconButton>\r\n                    <Icon color=\"error\">close</Icon>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </StyledTable>\r\n\r\n      <TablePagination\r\n        sx={{ px: 2 }}\r\n        page={page}\r\n        component=\"div\"\r\n        rowsPerPage={rowsPerPage}\r\n        count={subscribarList.length}\r\n        onPageChange={handleChangePage}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n        backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaginationTable;\r\n","import {\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst subscribarList = [\r\n  {\r\n    name: \"john doe\",\r\n    date: \"18 january, 2019\",\r\n    amount: 1000,\r\n    status: \"close\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"kessy bryan\",\r\n    date: \"10 january, 2019\",\r\n    amount: 9000,\r\n    status: \"open\",\r\n    company: \"My Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"james cassegne\",\r\n    date: \"8 january, 2019\",\r\n    amount: 5000,\r\n    status: \"close\",\r\n    company: \"Collboy Tech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n  {\r\n    name: \"lucy brown\",\r\n    date: \"1 january, 2019\",\r\n    amount: 89000,\r\n    status: \"open\",\r\n    company: \"ABC Fintech LTD.\",\r\n  },\r\n];\r\n\r\nconst SimpleTable = () => {\r\n  return (\r\n    <Box width=\"100%\" overflow=\"auto\">\r\n      <StyledTable>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"center\">Company</TableCell>\r\n            <TableCell align=\"center\">Start Date</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Amount</TableCell>\r\n            <TableCell align=\"right\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {subscribarList.map((subscriber, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"left\">{subscriber.name}</TableCell>\r\n              <TableCell align=\"center\">{subscriber.company}</TableCell>\r\n              <TableCell align=\"center\">{subscriber.date}</TableCell>\r\n              <TableCell align=\"center\">{subscriber.status}</TableCell>\r\n              <TableCell align=\"center\">${subscriber.amount}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <IconButton>\r\n                  <Icon color=\"error\">close</Icon>\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </StyledTable>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SimpleTable;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport PaginationTable from \"./PaginationTable\";\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  FormControlLabel,\r\n  Grid, Card,\r\n  Icon,\r\n  Radio,\r\n  RadioGroup,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { Span } from \"app/components/Typography\";\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst AppTable = () => {\r\n  return (\r\n    <Container>\r\n      {/* <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Estimation\", path: \"/bi\" }, { name: \"BI Estimation\" }]} />\r\n      </Box> */}\r\n\r\n      {/* <SimpleCard title=\"BI Estimations\">\r\n        <SimpleTable />\r\n      </SimpleCard> */}\r\n\r\n      <SimpleCard title=\"BI Estimations\">\r\n      \r\n\r\n        <Box display=\"flex\" alignItems=\"center\"  justifyContent= \"space-between\"> \r\n        <Card sx={{ px: 3, py: 0 }}>\r\n        <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"Search\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n      />\r\n      <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      </Card>\r\n        <Button color=\"primary\" variant=\"contained\" type=\"button\">\r\n          <Icon>send</Icon>\r\n          <Span sx={{ pl: 1, textTransform: \"capitalize\" }}>Create Estimate</Span>\r\n        </Button>\r\n        </Box>\r\n      \r\n        <PaginationTable />\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppTable;\r\n"],"names":["StyledTable","styled","Table","whiteSpace","paddingLeft","paddingRight","textTransform","subscribarList","name","date","amount","status","company","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowsPerPage","setRowsPerPage","_jsxs","Box","width","overflow","children","_jsx","TableHead","TableRow","TableCell","align","TableBody","slice","map","subscriber","index","IconButton","Icon","color","TablePagination","sx","px","component","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","event","target","value","nextIconButtonProps","backIconButtonProps","_ref","theme","Container","_ref2","margin","_defineProperty","breakpoints","down","marginBottom","SimpleCard","title","display","alignItems","justifyContent","Card","py","InputBase","ml","flex","placeholder","inputProps","type","p","SearchIcon","Button","variant","Span","pl","PaginationTable"],"sourceRoot":""}